(window.webpackJsonp=window.webpackJsonp||[]).push([[257],{645:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"剑指-offer-61-扑克牌中的顺子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剑指-offer-61-扑克牌中的顺子"}},[t._v("#")]),t._v(" 剑指 Offer 61. 扑克牌中的顺子")]),t._v(" "),a("p",[t._v("大家好，我是吴师兄。")]),t._v(" "),a("p",[t._v("今天继续来学习《剑指Offer》系列的一道经典题目，依旧给出了非常详细的题解和精美的配图与动画。")]),t._v(" "),a("h2",{attrs:{id:"一、题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[t._v("#")]),t._v(" 一、题目描述")]),t._v(" "),a("p",[t._v("从"),a("strong",[t._v("若干副扑克牌")]),t._v("中随机抽 5 张牌，判断是不是一个顺子，即这 5 张牌是不是连续的。")]),t._v(" "),a("p",[t._v("2 ～ 10 为数字本身，A 为 1 ，J 为 11 ，Q 为 12 ，K 为 13 ，"),a("strong",[t._v("而大、小王为")]),t._v(" "),a("strong",[t._v("0")]),t._v(" "),a("strong",[t._v("，可以看成任意数字")]),t._v("。")]),t._v(" "),a("p",[t._v("A 不能视为 14。")]),t._v(" "),a("p",[a("strong",[t._v("示例 1:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入: [1,2,3,4,5]\n输出: True\n")])])]),a("p",[a("strong",[t._v("示例 2:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("输入: [0,0,1,2,5]\n输出: True\n")])])]),a("p",[a("strong",[t._v("限制：")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数组长度为 5")])]),t._v(" "),a("li",[a("p",[t._v("数组的数取值为 [0, 13]")])])]),t._v(" "),a("h2",{attrs:{id:"二、题目解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[t._v("#")]),t._v(" 二、题目解析")]),t._v(" "),a("p",[t._v("5 张牌能否组成顺子，比如具备这个特征："),a("strong",[t._v("5 张牌里面，除了大小王之外，所有牌均不重复")]),t._v("，因为很显然，一旦有重复的牌，比如 "),a("code",[t._v("1、2、2、3、4")]),t._v(" 这种牌型必然不是顺子。")]),t._v(" "),a("p",[t._v("除此之外，有以下几种情况：")]),t._v(" "),a("h3",{attrs:{id:"_1、5-张牌里面没有大小王。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、5-张牌里面没有大小王。"}},[t._v("#")]),t._v(" 1、5 张牌里面"),a("strong",[t._v("没有")]),t._v("大小王。")]),t._v(" "),a("p",[t._v("最大牌和最小牌之差为 4，比如 "),a("code",[t._v("1、2、3、4、5")]),t._v("，最小牌为 1，最大牌为 5，两者之差为 4。")]),t._v(" "),a("h3",{attrs:{id:"_2、5-张牌里面有一个大小王-即出现过一个-0。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、5-张牌里面有一个大小王-即出现过一个-0。"}},[t._v("#")]),t._v(" 2、5 张牌里面"),a("strong",[t._v("有一个大小王")]),t._v("，即出现过一个 0。")]),t._v(" "),a("p",[a("strong",[t._v("由于 0 可以看成任意数字")]),t._v("，因此这个 0 可以变成任意的数字插在剩下的 4 张牌中的任意位置。")]),t._v(" "),a("ul",[a("li",[t._v("1、比如 "),a("code",[t._v("0、4、5、6、7")]),t._v("，里面 0 变成了 3，组成了 "),a("code",[t._v("3、4、5、6、7")]),t._v(" 的顺子。")]),t._v(" "),a("li",[t._v("2、比如 "),a("code",[t._v("4、5、6、7、0")]),t._v("，里面 0 变成了 8，组成了 "),a("code",[t._v("4、5、6、7、8")]),t._v(" 的顺子。")]),t._v(" "),a("li",[t._v("3、比如 "),a("code",[t._v("3、0、5、6、7")]),t._v("，里面 0 变成了 4，组成了 "),a("code",[t._v("3、4、5、6、7")]),t._v(" 的顺子。")])]),t._v(" "),a("p",[t._v("此时，可以注意到，除了 0 之外，最大牌与最小牌之差可能为 3 （ 情况 1、情况 2 ），也可能为 4 （ 情况 3 ）。")]),t._v(" "),a("h3",{attrs:{id:"_3、5-张牌里面有两个大小王-即出现过两个-0。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、5-张牌里面有两个大小王-即出现过两个-0。"}},[t._v("#")]),t._v(" 3、5 张牌里面"),a("strong",[t._v("有两个大小王")]),t._v("，即出现过两个 0。")]),t._v(" "),a("p",[a("strong",[t._v("由于 0 可以看成任意数字")]),t._v("，因此这两个 0 可以变成任意的数字插在剩下的 3 张牌中的任意位置。")]),t._v(" "),a("ul",[a("li",[t._v("1、比如 "),a("code",[t._v("0、0、5、6、7")]),t._v("，里面 0 变成了 3 和 4 ，组成了 "),a("code",[t._v("3、4、5、6、7")]),t._v(" 的顺子。")]),t._v(" "),a("li",[t._v("2、比如 "),a("code",[t._v("4、5、6、0、0")]),t._v("，里面 0 变成了 7 和 8 ，组成了 "),a("code",[t._v("4、5、6、7、8")]),t._v(" 的顺子。")]),t._v(" "),a("li",[t._v("3、比如 "),a("code",[t._v("0、4、5、0、7")]),t._v("，里面 0 变成了 3 和 6 ，组成了 "),a("code",[t._v("3、4、5、6、7")]),t._v(" 的顺子。")]),t._v(" "),a("li",[t._v("4、比如 "),a("code",[t._v("3、0、5、0、7")]),t._v("，里面 0 变成了 4 和 6 ，组成了 "),a("code",[t._v("3、4、5、6、7")]),t._v(" 的顺子。")])]),t._v(" "),a("p",[t._v("此时，可以注意到，除了 0 之外，最大牌与最小牌之差可能为 2 （ 情况 1、情况 2 ），也可能为 3 （ 情况 3 ），也可能为 4（ 情况 4 ）。")]),t._v(" "),a("p",[a("strong",[t._v("由此可以看出，顺子的情况下除了 0 之外，五张牌的最大牌与最小牌之差必然是小于 5 的。")])]),t._v(" "),a("p",[t._v("综上所述，我们可以去遍历这 5 张牌，执行如下的操作：")]),t._v(" "),a("ul",[a("li",[t._v("1、设置一个哈希表 "),a("strong",[t._v("Set")]),t._v("，借助它来执行判重操作，判断这 5 张牌是否存在重复牌，如果存在，那么肯定就不是顺子了。")]),t._v(" "),a("li",[t._v("2、设置两个变量 Max、Min，用来记录这五张牌除了 0 之外的最大值和最小值。")]),t._v(" "),a("li",[t._v("3、遇到大小王，忽略它。")]),t._v(" "),a("li",[t._v("4、遇到非大小王的牌，检查哈希表是否存在这张牌，如果存在，那么肯定就不是顺子，直接返回 "),a("code",[t._v("false")]),t._v("，否则将它加入到哈希表中，同时更新最大牌、最小牌的值。")]),t._v(" "),a("li",[t._v("5、遍历完毕之后，判断  Max、Min 是否小于 5。")])]),t._v(" "),a("p",[t._v("为了帮助你更好的理解整个过程，我特意做了一组动画，"),a("strong",[t._v("点开可以查看")]),t._v("：")]),t._v(" "),a("video",{attrs:{id:"video",width:"700",height:"400",muted:"muted",controls:"controls",poster:"https://article-1257126549.cos.ap-guangzhou.myqcloud.com/blog/3hdi5.jpeg"},domProps:{muted:!0}},[a("source",{attrs:{src:"https://article-1257126549.cos.ap-guangzhou.myqcloud.com/MP4/%E5%89%91%E6%8C%87%20Offer%2061.%20%E6%89%91%E5%85%8B%E7%89%8C%E4%B8%AD%E7%9A%84%E9%A1%BA%E5%AD%90.m4v",type:"video/mp4"}})]),t._v(" "),a("h2",{attrs:{id:"三、参考代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[t._v("#")]),t._v(" 三、参考代码")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录 AlgoMooc 官网获取更多算法图解")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://www.algomooc.com")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作者：程序员吴师兄")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 剑指 Offer 61. 扑克牌中的顺子：https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isStraight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置一个哈希表，将 nums 中的每一个元素都放入到哈希表 cards 中")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 cards 中，每一个元素值仅允许出现一次")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" cards "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashSet")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认最小值为不可能存在的扑克牌值 14")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认最大值为不可能存在的扑克牌值 0")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历 nums")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// num 为 0 ，说明是大小王，跳过它")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则说明 num 不为 0，需要更新 max 和 min")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新最大值 max")]),t._v("\n            max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新最小值 min")]),t._v("\n            min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果发现 cards 已经存在了 num，那么说明 nums 中存在了重复的扑克牌，必然无法组成顺子")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cards"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将这个扑克牌加入到哈希表 cards 中")]),t._v("\n            cards"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历结束后，查看最大牌和最小牌的差值是否小于 5")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是小于 5，则可构成顺子")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反之，无法构成顺子")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);