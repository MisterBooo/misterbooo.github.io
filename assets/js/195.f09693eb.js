(window.webpackJsonp=window.webpackJsonp||[]).push([[195],{579:function(s,t,n){"use strict";n.r(t);var a=n(54),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"leetcode-260、只出现一次的数字-iii"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-260、只出现一次的数字-iii"}},[s._v("#")]),s._v(" LeetCode 260、只出现一次的数字 III")]),s._v(" "),n("h2",{attrs:{id:"一、题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[s._v("#")]),s._v(" "),n("strong",[s._v("一、题目描述")])]),s._v(" "),n("p",[s._v("给定一个整数数组 "),n("code",[s._v("nums")]),s._v("，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。你可以按 "),n("strong",[s._v("任意顺序")]),s._v(" 返回答案。")]),s._v(" "),n("p",[s._v("**进阶：**你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("div",{staticClass:"language-Plain extra-class"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[s._v("输入：nums = [1,2,1,3,2,5]\n输出：[3,5]\n解释：[5, 3] 也是有效的答案。\n")])])]),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[s._v("2 <= nums.length <= 3 * 10(4)")]),s._v(" "),n("li",[s._v("-2(31) <= nums[i] <= 2(31) - 1")]),s._v(" "),n("li",[s._v("除两个只出现一次的整数外，"),n("code",[s._v("nums")]),s._v(" 中的其他数字都出现两次")])]),s._v(" "),n("h2",{attrs:{id:"二、题目解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[s._v("#")]),s._v(" "),n("strong",[s._v("二、题目解析")])]),s._v(" "),n("h2",{attrs:{id:"三、参考代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[s._v("#")]),s._v(" "),n("strong",[s._v("三、参考代码")])]),s._v(" "),n("div",{staticClass:"language-Java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 登录 AlgoMooc 官网获取更多算法图解")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// https://www.algomooc.com")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作者：程序员吴师兄")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只出现一次的数字 III（ LeetCode 260 ）：https://leetcode-cn.com/problems/single-number-iii/")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("singleNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sum 表示数组 nums 所有元素进行异或的结果")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历 nums 中的每个元素")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将每个元素都执行异或操作")]),s._v("\n            sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^=")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、由于 nums 中其余元素均出现两次")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、异或的特征：不同为 1 ，相同为 0 ")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此，最终的 sum 就是那两个只出现一次的元素异或的结果")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设这两个只出现一次的元素分别为 a 和 b")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a = 011 , b = 101 , 那么 sum = 110")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也就意味着 sum 上面的 1 必然是由 a 与 b 贡献的，因为两个相同元素的二进制必然相同，异或一下为 0")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设 sum 上面的第 k 位是 1")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 那么，我们可以将 nums 划分为两部分数组")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1、第 k 位是 1，包含了 b 与 nums 中第 k 位是 1 的元素，并且这些元素出现了两次")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2、第 k 位是 0，包含了 a 与 nums 中第 k 位是 0 的元素，并且这些元素出现了两次")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 也就是说，a 与 b 划分到了不同的部分")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 而相同的元素进行异或为 0 ，那么每一部分进行异或最终就剩下了一个只出现一次的元素")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先去找出 sum 中任意一位为 1 的位置，我们这里去找最低位为 1 的位置")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sum & -sum 的结果是 nsum的最低位的二进制")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 比如 sum = 1011，那么它的反码是 0100，补码就是 0101")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sum =            1011")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// &")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -sum =           0101")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ------------------------")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结果就是   0001")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 即获取到了 sum 中最低位为 1 的位置")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际上也可以这样理解，-sum 是 sum 取反再加 1 ，那么 sum & -sum 取得的就是再加的那个 1")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 特殊情况，如果 sum =  Integer.MIN_VALUE，即 sum = -2^31")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Integer.MIN_VALUE，即 -2147483648，二进制位如下： ")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1000 0000 0000 0000 0000 0000 0000 0000")]),s._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 取反后再加 1 会产生溢出的情况")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MIN_VALUE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" sum  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设这两个只出现一次的元素分别为 a 和 b")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 假设这两个只出现一次的元素分别为 a 和 b")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 再次遍历 nums ，将 num 划分为两部分")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这部分表示第 k 位为 0 的元素，包含了 a 与 nums 中第 k 位是 0 的元素，并且这些元素出现了两次")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" num "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这些元素进行异或，最终剩下了那个只出现一次的元素 a")]),s._v("\n                a "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^=")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这部分表示第 k 位为 1 的元素，包含了 b 与 nums 中第 k 位是 1 的元素，并且这些元素出现了两次")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这些元素进行异或，最终剩下了那个只出现一次的元素 b")]),s._v("\n                b "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^=")]),s._v(" num"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("        \n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结合为数组的形式进行返回")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回结果")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ans"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);