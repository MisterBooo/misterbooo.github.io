(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{488:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"leetcode-219、存在重复元素ii"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-219、存在重复元素ii"}},[t._v("#")]),t._v(" LeetCode 219、存在重复元素II")]),t._v(" "),a("h2",{attrs:{id:"一、题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[t._v("#")]),t._v(" "),a("strong",[t._v("一、题目描述")])]),t._v(" "),a("p",[t._v("给你一个整数数组 "),a("code",[t._v("nums")]),t._v(" 和一个整数 "),a("code",[t._v("k")]),t._v(" ，判断数组中是否存在两个 "),a("strong",[t._v("不同的索引")]),t._v(" "),a("code",[t._v("i")]),t._v(" 和 "),a("code",[t._v("j")]),t._v(" ，满足 "),a("code",[t._v("nums[i] == nums[j]")]),t._v(" 且 "),a("code",[t._v("abs(i - j) <= k")]),t._v(" 。如果存在，返回 "),a("code",[t._v("true")]),t._v(" ；否则，返回 "),a("code",[t._v("false")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("示例 1：")])]),t._v(" "),a("p",[t._v("输入：nums = [1,2,3,1], k = 3 输出：true")]),t._v(" "),a("p",[a("strong",[t._v("示例 2：")])]),t._v(" "),a("p",[t._v("输入：nums = [1,0,1,1], k = 1 输出：true")]),t._v(" "),a("p",[a("strong",[t._v("示例 3：")])]),t._v(" "),a("p",[t._v("输入：nums = [1,2,3,1,2,3], k = 2 输出：false")]),t._v(" "),a("p",[a("strong",[t._v("提示：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("1 <= nums.length <= 10^5")])]),t._v(" "),a("li",[a("code",[t._v("-109 <= nums[i] <= 10^9")])]),t._v(" "),a("li",[a("code",[t._v("0 <= k <= 10^5")])])]),t._v(" "),a("h2",{attrs:{id:"二、题目解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[t._v("#")]),t._v(" "),a("strong",[t._v("二、题目解析")])]),t._v(" "),a("h2",{attrs:{id:"三、参考代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[t._v("#")]),t._v(" "),a("strong",[t._v("三、参考代码")])]),t._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsNearbyDuplicate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用哈希集合")]),t._v("\n        pos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果想在 for 循环中同时获得列表的索引 i 和元素值 v")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可以使用枚举内置函数 enumerate()")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、如果发现当前这个元素 v 已经存在于哈希集合里面")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 说明在此之前就已经访问到了一个元素，值为 v")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、pos[v] 表示的是之前访问到的元素值所在的索引")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 判断 i - pos[v] <= k")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" pos "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 符合要求，就返回 True")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 否则，把 v 和 i 存储到哈希集合里面")]),t._v("\n            pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最终没有找到，返回 False")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);