(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{567:function(a,t,s){"use strict";s.r(t);var e=s(54),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"leetcode-1603、设计停车系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-1603、设计停车系统"}},[a._v("#")]),a._v(" LeetCode 1603、设计停车系统")]),a._v(" "),s("h2",{attrs:{id:"题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[a._v("#")]),a._v(" 题目描述")]),a._v(" "),s("p",[a._v("请你给一个停车场设计一个停车系统。停车场总共有三种不同大小的车位：大，中和小，每种尺寸分别有固定数目的车位。")]),a._v(" "),s("p",[a._v("请你实现 "),s("code",[a._v("ParkingSystem")]),a._v(" 类：")]),a._v(" "),s("ul",[s("li",[s("code",[a._v("ParkingSystem(int big, int medium, int small)")]),a._v(" 初始化 "),s("code",[a._v("ParkingSystem")]),a._v(" 类，三个参数分别对应每种停车位的数目。")]),a._v(" "),s("li",[s("code",[a._v("bool addCar(int carType)")]),a._v(" 检查是否有 "),s("code",[a._v("carType")]),a._v(" 对应的停车位。 "),s("code",[a._v("carType")]),a._v(" 有三种类型：大，中，小，分别用数字 "),s("code",[a._v("1")]),a._v("， "),s("code",[a._v("2")]),a._v(" 和 "),s("code",[a._v("3")]),a._v(" 表示。"),s("strong",[a._v("一辆车只能停在")]),a._v(" "),s("code",[a._v("carType")]),a._v(" 对应尺寸的停车位中。如果没有空车位，请返回 "),s("code",[a._v("false")]),a._v(" ，否则将该车停入车位并返回 "),s("code",[a._v("true")]),a._v(" 。")])]),a._v(" "),s("p",[s("strong",[a._v("示例 1：")])]),a._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('输入：\n["ParkingSystem", "addCar", "addCar", "addCar", "addCar"]\n[[1, 1, 0], [1], [2], [3], [1]]\n输出：\n[null, true, true, false, false]\n\n解释：\nParkingSystem parkingSystem = new ParkingSystem(1, 1, 0);\nparkingSystem.addCar(1); // 返回 true ，因为有 1 个空的大车位\nparkingSystem.addCar(2); // 返回 true ，因为有 1 个空的中车位\nparkingSystem.addCar(3); // 返回 false ，因为没有空的小车位\nparkingSystem.addCar(1); // 返回 false ，因为没有空的大车位，唯一一个大车位已经被占据了\n')])])]),s("p",[s("strong",[a._v("提示：")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("0 <= big, medium, small <= 1000")])]),a._v(" "),s("li",[s("code",[a._v("carType")]),a._v(" 取值为 "),s("code",[a._v("1")]),a._v("， "),s("code",[a._v("2")]),a._v(" 或 "),s("code",[a._v("3")])]),a._v(" "),s("li",[a._v("最多会调用 "),s("code",[a._v("addCar")]),a._v(" 函数 "),s("code",[a._v("1000")]),a._v(" 次")])]),a._v(" "),s("h2",{attrs:{id:"解题思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解题思路"}},[a._v("#")]),a._v(" 解题思路")]),a._v(" "),s("p",[a._v("1、用三个变量分别维护各类车型的剩余空位的数目，每次 "),s("code",[a._v("addCar(carType)")]),a._v(" 的时候就把对应类型的停车空位数目 "),s("code",[a._v("-1")]),a._v("。")]),a._v(" "),s("p",[a._v("2、如果当前车型的剩余空位数目 "),s("code",[a._v("== 0")]),a._v("，那么说明无法再停车了，就返回 "),s("code",[a._v("False")]),a._v("；否则说明可以停车，就返回 "),s("code",[a._v("True")]),a._v("。")]),a._v(" "),s("p",[a._v("3、"),s("code",[a._v("carType")]),a._v(" 的取值为 "),s("code",[a._v("1,2,3")]),a._v(" ，因此可以使用"),s("strong",[a._v("数组")]),a._v("保存停车位的剩余空位数目，根据下标来获取对应车型的停车位剩余数目。")]),a._v(" "),s("h2",{attrs:{id:"参考代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考代码"}},[a._v("#")]),a._v(" 参考代码")]),a._v(" "),s("div",{staticClass:"language-Python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParkingSystem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[a._v("object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" big"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" medium"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" small"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 数组的第 0 位置初始化为 0，起到占位符的作用")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 这样在 addCar 方法里面")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# park[1] 就是 big 的数量")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# park[2] 就是 medium 的数量")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# park[3] 就是 small 的数量")]),a._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("park "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" big"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" medium"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" small"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("def")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("addCar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" carType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当前类型没有车位了，返回 False")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("park"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("carType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("False")]),a._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 否则当前类型车位数量减少一个")]),a._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("park"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("carType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("True")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);