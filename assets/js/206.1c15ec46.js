(window.webpackJsonp=window.webpackJsonp||[]).push([[206],{593:function(t,a,s){"use strict";s.r(a);var n=s(54),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"leetcode-852、山脉数组的顶峰索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-852、山脉数组的顶峰索引"}},[t._v("#")]),t._v(" LeetCode 852、山脉数组的顶峰索引")]),t._v(" "),s("h2",{attrs:{id:"一、题目描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[t._v("#")]),t._v(" "),s("strong",[t._v("一、题目描述")])]),t._v(" "),s("p",[t._v("符合下列属性的数组 "),s("code",[t._v("arr")]),t._v(" 称为 "),s("strong",[t._v("山脉数组")]),t._v(" ：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("arr.length >= 3")])]),t._v(" "),s("li",[t._v("存在 "),s("code",[t._v("i")]),t._v("（"),s("code",[t._v("0 < i < arr.length - 1")]),t._v("）使得：\n"),s("ul",[s("li",[s("code",[t._v("arr[0] < arr[1] < ... arr[i-1] < arr[i]")])]),t._v(" "),s("li",[s("code",[t._v("arr[i] > arr[i+1] > ... > arr[arr.length - 1]")])])])])]),t._v(" "),s("p",[t._v("给你由整数组成的山脉数组 "),s("code",[t._v("arr")]),t._v(" ，返回任何满足 "),s("code",[t._v("arr[0] < arr[1] <... arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1] 的下标 i 。")])]),t._v(" "),s("p",[s("strong",[t._v("示例 1：")])]),t._v(" "),s("p",[t._v("输入：arr = [0,1,0] 输出：1")]),t._v(" "),s("p",[s("strong",[t._v("示例 2：")])]),t._v(" "),s("p",[t._v("输入：arr = [0,2,1,0] 输出：1")]),t._v(" "),s("p",[s("strong",[t._v("示例 3：")])]),t._v(" "),s("p",[t._v("输入：arr = [0,10,5,2] 输出：1")]),t._v(" "),s("p",[s("strong",[t._v("示例 4：")])]),t._v(" "),s("p",[t._v("输入：arr = [3,4,5,1] 输出：2")]),t._v(" "),s("p",[s("strong",[t._v("提示")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("3 <= arr.length <= 104")])]),t._v(" "),s("li",[s("code",[t._v("0 <= arr[i] <= 106")])]),t._v(" "),s("li",[t._v("题目数据保证 "),s("code",[t._v("arr")]),t._v(" 是一个山脉数组")])]),t._v(" "),s("p",[t._v("**进阶：**很容易想到时间复杂度 "),s("code",[t._v("O(n)")]),t._v(" 的解决方案，你可以设计一个 "),s("code",[t._v("O(log(n))")]),t._v(" 的解决方案吗？")]),t._v(" "),s("h2",{attrs:{id:"二、题目解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[t._v("#")]),t._v(" "),s("strong",[t._v("二、题目解析")])]),t._v(" "),s("h2",{attrs:{id:"三、参考代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[t._v("#")]),t._v(" "),s("strong",[t._v("三、参考代码")])]),t._v(" "),s("h3",{attrs:{id:"_1、java-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、java-代码"}},[t._v("#")]),t._v(" "),s("strong",[t._v("1、Java 代码")])]),t._v(" "),s("div",{staticClass:"language-Java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录 AlgoMooc 官网获取更多算法图解")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://www.algomooc.com")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作者：程序员吴师兄")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 山脉数组的峰顶索引（ LeetCode 852 ）:https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("peakIndexInMountainArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 题目告诉我们 3 <= arr.length <= 10^4")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也就是说 arr 的最左侧和最右侧肯定不是山峰")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以如果存在山脉，数组中最左侧的元素肯定不是山脉的山峰位置，因为它的左侧没有元素了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因此，搜索区间需要从索引为 1 的位置开始")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同样的，如果存在山脉，数组中最右侧的元素肯定不是山脉的山峰位置，因为它的右侧没有元素了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因此，搜索区间需要从索引为 nums.length - 2 的位置结束")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 while 循环里面，left 不断的 ++，而 right 不断的 --")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当 left 和 right 相等， [ left , right ] 这个区间存在一个元素的时候")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以，当 left == right 时，跳出循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时，while 循环的判断不可以可以使用等号")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// left + (right - left) / 2 和 (left + right) / 2 的结果相同")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是使用 left + (right - left) / 2 可以防止由于 left 、right 同时太大，导致相加的结果溢出的问题")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如数据 int 的最大值为 2,147,483,647")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时，left 为 2,147,483,640")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时，right 为 2,147,483,646")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 两者直接相加超过了 2,147,483,647，产生了溢出")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 由于题目中提示【题目数据保证 arr 是一个山脉数组】")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以对于 arr 中任意位置的元素，比如 mid 所在的位置，只有以下三种情况")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、mid 处于山峰位置，也就是它的值大于左侧，也大于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr[mid] > arr[mid + 1] && arr[mid] > arr[mid - 1] ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时，找到了结果")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                \n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回结果")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、mid 处于上升状态，也就是它的值大于左侧，同时小于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr[mid] > arr[mid - 1] && arr[mid] < arr[mid + 1]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么，我们需要在右侧区间去寻找出下降的那段     ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缩小区间，从 [ mid + 1 , right ] 里面去找")]),t._v("\n                left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、mid 处于下降状态，也就是它的值小于左侧，同时小于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arr[mid] < arr[mid - 1] && arr[mid] > arr[mid + 1]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 那么，我们需要在左侧区间去寻找出上升的那段     ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 缩小区间，从 [ left , mid - 1 ] 里面去找")]),t._v("\n                right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 跳出循环，此时 left == right，区间为 [ left，right ]，只有一个元素")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回这个下标即可")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2、-c-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、-c-代码"}},[t._v("#")]),t._v(" **2、**"),s("strong",[t._v("C++")]),t._v(" "),s("strong",[t._v("代码")])]),t._v(" "),s("div",{staticClass:"language-C++ extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 登录 AlgoMooc 官网获取更多算法图解\n// https://www.algomooc.com\n// 作者：程序员吴师兄\n// 代码有看不懂的地方一定要私聊咨询吴师兄呀\n// 山脉数组的峰顶索引（ LeetCode 852 ）:https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/\nclass Solution {\npublic:\n    int peakIndexInMountainArray(vector<int>& arr) {\n\n        // 题目告诉我们 3 <= arr.length <= 10^4\n        // 也就是说 arr 的最左侧和最右侧肯定不是山峰\n\n        // 所以如果存在山脉，数组中最左侧的元素肯定不是山脉的山峰位置，因为它的左侧没有元素了\n        // 因此，搜索区间需要从索引为 1 的位置开始\n        int left = 1;\n\n        // 同样的，如果存在山脉，数组中最右侧的元素肯定不是山脉的山峰位置，因为它的右侧没有元素了\n        // 因此，搜索区间需要从索引为 nums.length - 2 的位置结束\n        int right = arr.size() - 2;\n\n        // 在 while 循环里面，left 不断的 ++，而 right 不断的 --\n        // 当 left 和 right 相等， [ left , right ] 这个区间存在一个元素的时候\n        // 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果\n        // 所以，当 left == right 时，跳出循环\n        // 此时，while 循环的判断不可以可以使用等号\n        while(left < right) {\n\n            // left + (right - left) / 2 和 (left + right) / 2 的结果相同\n            // 但是使用 left + (right - left) / 2 可以防止由于 left 、right 同时太大，导致相加的结果溢出的问题\n            // 比如数据 int 的最大值为 2,147,483,647\n            // 此时，left 为 2,147,483,640\n            // 此时，right 为 2,147,483,646\n            // 两者直接相加超过了 2,147,483,647，产生了溢出\n            int mid = left + (right - left) / 2;\n\n            // 由于题目中提示【题目数据保证 arr 是一个山脉数组】\n            // 所以对于 arr 中任意位置的元素，比如 mid 所在的位置，只有以下三种情况\n\n            // 1、mid 处于山峰位置，也就是它的值大于左侧，也大于右侧\n            // arr[mid] > arr[mid + 1] && arr[mid] > arr[mid - 1] \n            // 此时，找到了结果\n            if( arr[mid] > arr[mid - 1] && arr[mid] > arr[mid + 1]  ){\n                \n                // 返回结果\n                return mid;\n\n            }\n\n            // 2、mid 处于上升状态，也就是它的值大于左侧，同时小于右侧\n            // arr[mid] > arr[mid - 1] && arr[mid] < arr[mid + 1]\n            // 那么，我们需要在右侧区间去寻找出下降的那段     \n            if( arr[mid] > arr[mid - 1] && arr[mid] < arr[mid + 1]){\n\n                // 缩小区间，从 [ mid + 1 , right ] 里面去找\n                left = mid + 1;\n\n            }\n\n            // 3、mid 处于下降状态，也就是它的值小于左侧，同时小于右侧\n            // arr[mid] < arr[mid - 1] && arr[mid] > arr[mid + 1]\n            // 那么，我们需要在左侧区间去寻找出上升的那段     \n            if( arr[mid] < arr[mid - 1] && arr[mid] > arr[mid + 1]  ){\n\n                // 缩小区间，从 [ left , mid - 1 ] 里面去找\n                right = mid - 1;\n\n            } \n\n        }\n\n        // 跳出循环，此时 left == right，区间为 [ left，right ]，只有一个元素\n        // 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果\n        // 返回这个下标即可\n        return left;\n    }\n};\n")])])]),s("h3",{attrs:{id:"_3、python-代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、python-代码"}},[t._v("#")]),t._v(" "),s("strong",[t._v("3、Python 代码")])]),t._v(" "),s("div",{staticClass:"language-Python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录 AlgoMooc 官网获取更多算法图解")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https://www.algomooc.com")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 作者：程序员吴师兄")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 山脉数组的峰顶索引（ LeetCode 852 ）:https://leetcode-cn.com/problems/peak-index-in-a-mountain-array/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("peakIndexInMountainArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 题目告诉我们 3 <= arr.length <= 10^4")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 也就是说 arr 的最左侧和最右侧肯定不是山峰")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以如果存在山脉，数组中最左侧的元素肯定不是山脉的山峰位置，因为它的左侧没有元素了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因此，搜索区间需要从索引为 1 的位置开始")]),t._v("\n        left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 同样的，如果存在山脉，数组中最右侧的元素肯定不是山脉的山峰位置，因为它的右侧没有元素了")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因此，搜索区间需要从索引为 nums.length - 2 的位置结束")]),t._v("\n        right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 while 循环里面，left 不断的 ++，而 right 不断的 --")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当 left 和 right 相等， [ left , right ] 这个区间存在一个元素的时候")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以，当 left == right 时，跳出循环")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时，while 循环的判断不可以可以使用等号")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" right "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# left + (right - left) / 2 和 (left + right) / 2 的结果相同")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但是使用 left + (right - left) / 2 可以防止由于 left 、right 同时太大，导致相加的结果溢出的问题")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比如数据 int 的最大值为 2,147,483,647")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时，left 为 2,147,483,640")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时，right 为 2,147,483,646")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 两者直接相加超过了 2,147,483,647，产生了溢出")]),t._v("\n            mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于题目中提示【题目数据保证 arr 是一个山脉数组】")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以对于 arr 中任意位置的元素，比如 mid 所在的位置，只有以下三种情况")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、mid 处于山峰位置，也就是它的值大于左侧，也大于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# arr[mid] > arr[mid + 1] and arr[mid] > arr[mid - 1] ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时，找到了结果")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                \n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回结果")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mid\n\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、mid 处于上升状态，也就是它的值大于左侧，同时小于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# arr[mid] > arr[mid - 1] and arr[mid] < arr[mid + 1]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那么，我们需要在右侧区间去寻找出下降的那段     ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缩小区间，从 [ mid + 1 , right ] 里面去找")]),t._v("\n                left "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、mid 处于下降状态，也就是它的值小于左侧，同时小于右侧")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# arr[mid] < arr[mid - 1] and arr[mid] > arr[mid + 1]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那么，我们需要在左侧区间去寻找出上升的那段     ")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缩小区间，从 [ left , mid - 1 ] 里面去找")]),t._v("\n                right "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 跳出循环，此时 left == right，区间为 [ left，right ]，只有一个元素")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这也意味着这个区间里面的元素找不到其它元素和它进行比较，它已经傲视群峰，就是山脉，得到结果")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 返回这个下标即可")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" left\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);