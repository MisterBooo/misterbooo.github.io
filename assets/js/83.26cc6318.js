(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{470:function(t,s,n){"use strict";n.r(s);var a=n(54),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"leetcode-605、种花问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-605、种花问题"}},[t._v("#")]),t._v(" LeetCode 605、种花问题")]),t._v(" "),n("h2",{attrs:{id:"一、题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[t._v("#")]),t._v(" "),n("strong",[t._v("一、题目描述")])]),t._v(" "),n("p",[t._v("假设有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花不能种植在相邻的地块上，它们会争夺水源，两者都会死去。")]),t._v(" "),n("p",[t._v("给你一个整数数组 "),n("code",[t._v("flowerbed")]),t._v(" 表示花坛，由若干 "),n("code",[t._v("0")]),t._v(" 和 "),n("code",[t._v("1")]),t._v(" 组成，其中 "),n("code",[t._v("0")]),t._v(" 表示没种植花，"),n("code",[t._v("1")]),t._v(" 表示种植了花。另有一个数 "),n("code",[t._v("n")]),t._v(" ，能否在不打破种植规则的情况下种入 "),n("code",[t._v("n")]),t._v(" 朵花？能则返回 "),n("code",[t._v("true")]),t._v(" ，不能则返回 "),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("示例 1：")])]),t._v(" "),n("div",{staticClass:"language-Plain extra-class"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[t._v("输入：flowerbed = [1,0,0,0,1], n = 1\n输出：true\n")])])]),n("p",[n("strong",[t._v("示例 2：")])]),t._v(" "),n("div",{staticClass:"language-Plain extra-class"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[t._v("输入：flowerbed = [1,0,0,0,1], n = 2\n输出：false\n")])])]),n("p",[n("strong",[t._v("提示：")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("1 <= flowerbed.length <= 2 * 104")])]),t._v(" "),n("li",[n("code",[t._v("flowerbed[i]")]),t._v(" 为 "),n("code",[t._v("0")]),t._v(" 或 "),n("code",[t._v("1")])]),t._v(" "),n("li",[n("code",[t._v("flowerbed")]),t._v(" 中不存在相邻的两朵花")]),t._v(" "),n("li",[n("code",[t._v("0 <= n <= flowerbed.length")])])]),t._v(" "),n("h2",{attrs:{id:"二、题目解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[t._v("#")]),t._v(" "),n("strong",[t._v("二、题目解析")])]),t._v(" "),n("h2",{attrs:{id:"三、参考代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[t._v("#")]),t._v(" "),n("strong",[t._v("三、参考代码")])]),t._v(" "),n("h3",{attrs:{id:"_1、java-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、java-代码"}},[t._v("#")]),t._v(" "),n("strong",[t._v("1、Java 代码")])]),t._v(" "),n("div",{staticClass:"language-Java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 登录 AlgoMooc 官网获取更多算法图解")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://www.algomooc.com")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作者：程序员吴师兄")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://leetcode-cn.com/problems/can-place-flowers/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("canPlaceFlowers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遍历数组，在遍历过程中，采取贪心的思路，并不需要【每个位置】都去查看是否可以种花")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、当前位置没有种花，需要考虑后面一个位置是否种花")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以让 i 执行加 2 操作，跳过了加 1 后的那个位置")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让 i 执行加 2 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、说明当前位置没有种花 flowerbed[i] == 0")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、如果这个位置是数组的最后一个位置，说明后一个位置不存在，没有限制，说明 flowerbed[i] 可以种花")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、如果这个位置【不是】数组的最后一个位置，那么只有后一个位置【没有种花】，才有资格在 flowerbed[i] 位置种花")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以上两种条件都可以在 flowerbed[i] 位置种花")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功之后，所需目标减 1")]),t._v("\n               n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n               \n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 flowerbed[i] 位置种花之后，i + 1 位置不需要去考虑了，因为它明显不能种花，可以跳过去")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让 i 执行加 2 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            \n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5、说明当前位置没有种花 flowerbed[i] == 0")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6、但是后一个位置已经种花了，那么当前位置无法采取种花操作")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i + 1 位置已经种花，不用再去访问一遍")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// i + 2 位置考虑到 i + 1 位置已经种花，所以也无法种花，不用再去访问")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让 i 执行加 3 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后查看是否用完了 n")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"_2、-c-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、-c-代码"}},[t._v("#")]),t._v(" **2、**"),n("strong",[t._v("C++")]),t._v(" "),n("strong",[t._v("代码")])]),t._v(" "),n("div",{staticClass:"language-Plain extra-class"},[n("pre",{pre:!0,attrs:{class:"language-plain"}},[n("code",[t._v("class Solution {\npublic:\n    bool canPlaceFlowers(vector<int>& flowerbed, int n) {\n\n        // 遍历数组，在遍历过程中，采取贪心的思路，并不需要【每个位置】都去查看是否可以种花\n       // 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去\n       // 2、当前位置没有种花，需要考虑后面一个位置是否种花\n       for( int i = 0 ; i < flowerbed.size() && n > 0 ; ){\n\n           // 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去\n           // 所以让 i 执行加 2 操作，跳过了加 1 后的那个位置\n           if(flowerbed[i] == 1){\n\n               // 让 i 执行加 2 操作\n               i += 2;\n\n\n           // 2、说明当前位置没有种花 flowerbed[i] == 0\n           // 3、如果这个位置是数组的最后一个位置，说明后一个位置不存在，没有限制，说明 flowerbed[i] 可以种花\n           // 4、如果这个位置【不是】数组的最后一个位置，那么只有后一个位置【没有种花】，才有资格在 flowerbed[i] 位置种花\n           }else if( i == flowerbed.size() - 1 || flowerbed[i + 1] == 0){\n\n               // 以上两种条件都可以在 flowerbed[i] 位置种花\n               // 成功之后，所需目标减 1\n               n--;\n               \n               // 在 flowerbed[i] 位置种花之后，i + 1 位置不需要去考虑了，因为它明显不能种花，可以跳过去\n               // 让 i 执行加 2 操作\n               i += 2;\n            \n           // 5、说明当前位置没有种花 flowerbed[i] == 0\n           // 6、但是后一个位置已经种花了，那么当前位置无法采取种花操作\n           }else{\n\n               // i + 1 位置已经种花，不用再去访问一遍\n               // i + 2 位置考虑到 i + 1 位置已经种花，所以也无法种花，不用再去访问\n               // 让 i 执行加 3 操作\n               i += 3;\n           }\n\n       }\n\n       // 最后查看是否用完了 n\n       return n <= 0;\n\n    }\n};\n")])])]),n("h3",{attrs:{id:"_3、python-代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、python-代码"}},[t._v("#")]),t._v(" "),n("strong",[t._v("3、Python 代码")])]),t._v(" "),n("div",{staticClass:"language-Python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Solution")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("canPlaceFlowers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" List"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 遍历数组，在遍历过程中，采取贪心的思路，并不需要【每个位置】都去查看是否可以种花")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、当前位置没有种花，需要考虑后面一个位置是否种花")]),t._v("\n\n       i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1、当前位置已经种花，那么后一个位置明显不能种花，可以跳过去")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所以让 i 执行加 2 操作，跳过了加 1 后的那个位置")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让 i 执行加 2 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2、说明当前位置没有种花 flowerbed[i] == 0")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3、如果这个位置是数组的最后一个位置，说明后一个位置不存在，没有限制，说明 flowerbed[i] 可以种花")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4、如果这个位置【不是】数组的最后一个位置，那么只有后一个位置【没有种花】，才有资格在 flowerbed[i] 位置种花")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以上两种条件都可以在 flowerbed[i] 位置种花")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 成功之后，所需目标减 1")]),t._v("\n               n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n               \n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 flowerbed[i] 位置种花之后，i + 1 位置不需要去考虑了，因为它明显不能种花，可以跳过去")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让 i 执行加 2 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n            \n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5、说明当前位置没有种花 flowerbed[i] == 0")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6、但是后一个位置已经种花了，那么当前位置无法采取种花操作")]),t._v("\n           "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i + 1 位置已经种花，不用再去访问一遍")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# i + 2 位置考虑到 i + 1 位置已经种花，所以也无法种花，不用再去访问")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 让 i 执行加 3 操作")]),t._v("\n               i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最后查看是否用完了 n")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),n("h2",{attrs:{id:"四、时空复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、时空复杂度"}},[t._v("#")]),t._v(" "),n("strong",[t._v("四、时空复杂度")])]),t._v(" "),n("ul",[n("li",[t._v("时间复杂度："),n("code",[t._v("O(n)")]),t._v("。")]),t._v(" "),n("li",[t._v("空间复杂度："),n("code",[t._v("O(1)")]),t._v("。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);