(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{405:function(s,t,a){"use strict";a.r(t);var n=a(54),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"leetcode-283、移动零"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#leetcode-283、移动零"}},[s._v("#")]),s._v(" LeetCode 283、移动零")]),s._v(" "),a("h2",{attrs:{id:"一、题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、题目描述"}},[s._v("#")]),s._v(" 一、题目描述")]),s._v(" "),a("p",[s._v("给定一个数组 "),a("code",[s._v("nums")]),s._v("，编写一个函数将所有 "),a("code",[s._v("0")]),s._v(" 移动到数组的末尾，同时保持非零元素的相对顺序。")]),s._v(" "),a("p",[a("strong",[s._v("请注意")]),s._v(" ，必须在不复制数组的情况下原地对数组进行操作。")]),s._v(" "),a("p",[a("strong",[s._v("示例 1:")])]),s._v(" "),a("div",{staticClass:"language-Plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("输入: nums = [0,1,0,3,12]\n输出: [1,3,12,0,0]\n")])])]),a("p",[a("strong",[s._v("示例 2:")])]),s._v(" "),a("div",{staticClass:"language-Plain extra-class"},[a("pre",{pre:!0,attrs:{class:"language-plain"}},[a("code",[s._v("输入: nums = [0]\n输出: [0]\n")])])]),a("p",[a("strong",[s._v("提示")]),s._v(":")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("1 <= nums.length <= 10^4")])]),s._v(" "),a("li",[a("code",[s._v("-2^31 <= nums[i] <= 2^31 - 1")])])]),s._v(" "),a("p",[s._v("**进阶：**你能尽量减少完成的操作次数吗？")]),s._v(" "),a("h2",{attrs:{id:"二、题目解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、题目解析"}},[s._v("#")]),s._v(" 二、题目解析")]),s._v(" "),a("h2",{attrs:{id:"三、参考代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、参考代码"}},[s._v("#")]),s._v(" 三、参考代码")]),s._v(" "),a("h3",{attrs:{id:"_1、java-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、java-代码"}},[s._v("#")]),s._v(" 1、Java 代码")]),s._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 登录 AlgoMooc 官网获取更多算法图解")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// https://www.algomooc.com")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作者：程序员吴师兄")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 微信：wzb_3377")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代码有看不懂的地方一定要私聊咨询吴师兄呀")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移动零（LeetCode 283）：https://leetcode.cn/problems/move-zeroes/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("moveZeroes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置一个变量，用来指向经过一系列操作后数组中所有为 0 元素的第一个位置上")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一开始默认在索引为 0 的位置")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" slow "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从头到尾遍历数组")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 遍历完毕之后，slow 指向了一个为 0 的元素，或者如果数组中不存在 0 ，就和 fast 一样，超过了数组的范围")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fast "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" fast "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" fast"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在遍历过程中，如果发现访问的元素是非 0 元素")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 说明 slow 不在正确的位置上，需要向后移动，寻找合适的位置")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个时候，原先 slow 的值需要被 fast 的值覆盖")]),s._v("\n                nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("slow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// slow 需要向后移动，寻找合适的位置")]),s._v("\n                slow"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接下来，只需要把 slow 极其后面所有的元素都设置为 0 就行")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" slow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 都设置为 0 ")]),s._v("\n            nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2、c-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、c-代码"}},[s._v("#")]),s._v(" 2、C++ 代码")]),s._v(" "),a("div",{staticClass:"language-C++ extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Solution {\npublic:\n    void moveZeroes(vector<int>& nums) {\n        // 设置一个变量，用来指向经过一系列操作后数组中所有为 0 元素的第一个位置上\n        // 一开始默认在索引为 0 的位置\n        int slow = 0;\n\n        // 从头到尾遍历数组\n        // 遍历完毕之后，slow 指向了一个为 0 的元素，或者如果数组中不存在 0 ，就和 fast 一样，超过了数组的范围\n        for (int fast = 0; fast < nums.size(); fast++) {\n\n            // 在遍历过程中，如果发现访问的元素是非 0 元素\n            // 说明 slow 不在正确的位置上，需要向后移动，寻找合适的位置\n            if (nums[fast] != 0) {\n\n                // 这个时候，原先 slow 的值需要被 fast 的值覆盖\n                nums[slow] = nums[fast];\n\n                // slow 需要向后移动，寻找合适的位置\n                slow++;\n\n            }\n        }\n\n        // 接下来，只需要把 slow 极其后面所有的元素都设置为 0 就行\n        for (int i = slow; i < nums.size(); i++) {\n\n            // 都设置为 0 \n            nums[i] = 0;\n\n        }\n    }\n};\n")])])]),a("h3",{attrs:{id:"_3、python-代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、python-代码"}},[s._v("#")]),s._v(" 3、Python 代码")]),s._v(" "),a("div",{staticClass:"language-Python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Solution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("moveZeroes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置一个变量，用来指向经过一系列操作后数组中所有为 0 元素的第一个位置上")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一开始默认在索引为 0 的位置")]),s._v("\n        slow "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从头到尾遍历数组")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 遍历完毕之后，slow 指向了一个为 0 的元素，或者如果数组中不存在 0 ，就和 fast 一样，超过了数组的范围")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" fast "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在遍历过程中，如果发现访问的元素是非 0 元素")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 说明 slow 不在正确的位置上，需要向后移动，寻找合适的位置")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这个时候，原先 slow 的值需要被 fast 的值覆盖")]),s._v("\n                nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("slow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("fast"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# slow 需要向后移动，寻找合适的位置")]),s._v("\n                slow "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 接下来，只需要把 slow 极其后面所有的元素都设置为 0 就行")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("slow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 都设置为 0 ")]),s._v("\n            nums"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("h2",{attrs:{id:"四、复杂度分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、复杂度分析"}},[s._v("#")]),s._v(" 四、复杂度分析")]),s._v(" "),a("ul",[a("li",[s._v("时间复杂度：O(n)，其中 n 为序列长度。每个位置至多被遍历两次。")]),s._v(" "),a("li",[s._v("空间复杂度：O(1)。只需要常数的空间存放若干变量。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);